#!/usr/bin/env python
# -*- coding: utf-8 -*-

__author__ = 'circlezhou'

'''
Description:

Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
'''
class Solution(object):
	def findTheDifference(self, s, t):
		"""
		:type s: str
		:type t: str
		:rtype: str
		"""
		s_map = {}
		t_map = {}
		for i in s:
			if not s_map.has_key(i):
				s_map[i] = 1
			else:
				s_map[i] += 1
		for j in t:
			if not t_map.has_key(j):
				t_map[j] = 1
			else:
				t_map[j] += 1
		for k, v in t_map.iteritems():
			if not s_map.has_key(k) or s_map[k] != v:
				return k


''' Better Solution '''

# Using XOR:

class Solution(object):
    def findTheDifference(self, s, t):
        return chr(reduce(operator.xor, map(ord, s + t)))

# Using collections.Counter():

class Solution(object):
    def findTheDifference(self, s, t):
        return list((collections.Counter(t) - collections.Counter(s)))[0]

# A 2-liner here using sorted():
class Solution(object):
    def findTheDifference(self, s, t):
        s, t = sorted(s), sorted(t)
        return t[-1] if s == t[:-1] else [x[1] for x in zip(s, t) if x[0] != x[1]][0]

